// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var Belt_MapString = require("bs-platform/lib/js/belt_MapString.js");

var initialState = {
  recipes: undefined,
  tags: undefined
};

function addRecipe(state, id, title, ingredients, instructions) {
  return {
          recipes: Belt_MapString.set(state.recipes, id, {
                id: id,
                title: title,
                ingredients: ingredients,
                instructions: instructions,
                tags: []
              }),
          tags: state.tags
        };
}

function updateTagsArray(taggedRecipesOption, recipeId) {
  if (taggedRecipesOption !== undefined) {
    return Belt_Array.concat(taggedRecipesOption, [recipeId]);
  } else {
    return [recipeId];
  }
}

function addTag(state, recipeId, tag) {
  var recipeOption = Belt_MapString.get(state.recipes, recipeId);
  if (recipeOption === undefined) {
    return state;
  }
  var recipeTags = Belt_Array.concat(recipeOption.tags, [tag]);
  var recipes = Belt_MapString.set(state.recipes, recipeOption.id, {
        id: recipeOption.id,
        title: recipeOption.title,
        ingredients: recipeOption.ingredients,
        instructions: recipeOption.instructions,
        tags: recipeTags
      });
  var tags = Belt_MapString.update(state.tags, tag, (function (taggedRecipesOption) {
          return updateTagsArray(taggedRecipesOption, recipeOption.id);
        }));
  return {
          recipes: recipes,
          tags: tags
        };
}

function reducer(state, action) {
  if (action.TAG === /* AddRecipe */0) {
    return addRecipe(state, action.id, action.title, action.ingredients, action.instructions);
  } else {
    return addTag(state, action.recipeId, action.tag);
  }
}

var currentState = {
  contents: initialState
};

function getState(param) {
  return currentState.contents;
}

function dispatch(action) {
  currentState.contents = reducer(currentState.contents, action);
  
}

var Reducer = {
  getState: getState,
  dispatch: dispatch
};

exports.initialState = initialState;
exports.addRecipe = addRecipe;
exports.updateTagsArray = updateTagsArray;
exports.addTag = addTag;
exports.reducer = reducer;
exports.Reducer = Reducer;
/* No side effect */
